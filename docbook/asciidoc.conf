# AsciiDoc configuration for Wireshark

[replacements]

# Yes, these are fake macros.
# We should probably replace some or all of them with attributes.
wireshark-version:\[\]=1.12.6
wireshark-major-minor-version:\[\]=1.12

wireshark-authors-url:\[\]=http://www.wireshark.org/about.html#authors
wireshark-bugs-site:\[\]=https://bugs.wireshark.org/
wireshark-code-browse-url:\[\]=https://code.wireshark.org/review/gitweb?p=wireshark.git
wireshark-code-review-url:\[\]=https://code.wireshark.org/review
wireshark-dev-list-email:\[\]=wireshark-dev&#91;AT&#93;wireshark.org
wireshark-developers-guide-url:\[\]=http://www.wireshark.org/docs/
wireshark-download-page:\[\]=http://www.wireshark.org/download/
wireshark-faq-url:\[\]=http://www.wireshark.org/faq.html
wireshark-git-anonhttp-url:\[\]=https://code.wireshark.org/review/wireshark
wireshark-git-http-url:\[\]=https://your.username@code.wireshark.org/review/wireshark
wireshark-git-ssh-url:\[\]=ssh://your.username@code.wireshark.org:29418/wireshark
wireshark-buildbot-url:\[\]=http://buildbot.wireshark.org/trunk/waterfall
wireshark-mailing-lists-url:\[\]=http://www.wireshark.org/lists/
wireshark-qa-url:\[\]=http://ask.wireshark.org/
wireshark-users-guide-url:\[\]=http://www.wireshark.org/docs/
wireshark-web-site:\[\]=http://www.wireshark.org/
wireshark-wiki-site:\[\]=http://wiki.wireshark.org/

# Make a document attribute after we fully convert to AsciiDoc
wsdg-author-email:\[\]=ulf.lamping&#91;AT&#93;web.de

gpl-url:\[\]=http://www.gnu.org/licenses/gpl-2.0.html

[macros]

# bugs.wireshark.org link
# ws-buglink:<dddd>[<bug text>]
# Default bug text is "Bug".
# Examples: ws-buglink:5000[] ws-buglink:4000[Wireshark bug number]
(?su)(?<!\w)[\\]?(?P<name>ws-buglink):(?P<target>\d+)\[(?P<attrlist>.*?)(?<!\\)\]=

# www.wireshark.org/security link
# ws-salink:<dddd-dd>[<advisory text>]
# Default advisory text is "".
# Examples: ws-salink:2013-32[] ws-salink:2013-12[Security advisory]
(?su)(?<!\w)[\\]?(?P<name>ws-salink):(?P<target>\d{4}-\d{2,3})\[(?P<attrlist>.*?)(?<!\\)\]=

# CVE ID link
# cve-idlink:<dddd-dddd>[]
# Example: cve-idlink:2013:0001
(?su)(?<!\w)[\\]?(?P<name>cve-idlink):(?P<target>\d{4}-\d+)\[\]=


ifdef::backend-docbook45[]

[ws-buglink-inlinemacro]
<ulink url="https://bugs.wireshark.org/bugzilla/show_bug.cgi?id={target}">{0=Bug} {target}</ulink>

[ws-salink-inlinemacro]
<ulink url="https://www.wireshark.org/security/wnpa-sec-{target}.html">{0=}wnpa-sec-{target}</ulink>

[cve-idlink-inlinemacro]
<ulink url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-{target}">CVE-{target}</ulink>

endif::backend-docbook45[]


ifdef::backend-html4,backend-html5,backend-xhtml11[]

[ws-buglink-inlinemacro]
<a href="https://bugs.wireshark.org/bugzilla/show_bug.cgi?id={target}">{0=Bug} {target}</a>

[ws-salink-inlinemacro]
<a href="https://www.wireshark.org/security/wnpa-sec-{target}.html">{0=}wnpa-sec-{target}</a>

[cve-idlink-inlinemacro]
<a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-{target}">CVE-{target}</a>

endif::backend-html4,backend-html5,backend-xhtml11[]


# Given a list of items, sort and comma-separate them. Blank lines are stripped.
# Case is ignored. For example,
#
# --sort-and-group--
# One
# two
# red
#
# blue
# Fish
#
# --sort-and-group--
#
# produces
#
#     blue, Fish, One, red, two
[blockdef-sort-and-group]
delimiter=^--sort-and-group--$
style=default
filter=sort --ignore-case
default-style=template="paragraph",filter='sort --ignore-case | sed -e "s/,//g" | sed -e "/^$/d" -e "$ s/^/and /" -e "$ ! s/$/,/"'
